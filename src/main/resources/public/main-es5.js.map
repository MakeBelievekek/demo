{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/trace/code-side/code-line/code-line.component.ts","webpack:///src/app/components/trace/code-side/code-line/code-line.component.html","webpack:///src/app/components/trace/code-side/code-side.component.ts","webpack:///src/app/components/trace/code-side/code-side.component.html","webpack:///src/app/components/trace/trace.component.ts","webpack:///src/app/components/trace/trace.component.html","webpack:///src/app/services/code-http.service.ts","webpack:///src/app/services/line.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CodeLineComponent","lineService","backgroundColor","setBackgroundColor","codeLine","lineModel","CodeSideComponent","codeHttpService","postCoobitFileLocation","filePath","subscribe","value","console","log","onClick","TraceComponent","CODE_BASE_URL","CodeHttpService","http","fileLocation","post","providedIn","LineService","lineNumber","order","statement","lineBackgroundColor","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TraceComponent} from './components/trace/trace.component';\n\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'trace'},\n  {path: 'trace', component: TraceComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngFX';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CodeSideComponent } from './components/trace/code-side/code-side.component';\nimport { CodeLineComponent } from './components/trace/code-side/code-line/code-line.component';\nimport { TraceComponent } from './components/trace/trace.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CodeSideComponent,\n    CodeLineComponent,\n    TraceComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {LineService} from '../../../../services/line.service';\nimport {SafeStyle} from '@angular/platform-browser';\nimport {CodeLineModel} from '../../../../models/codeLine.model';\n\n@Component({\n  selector: 'app-code-line',\n  templateUrl: './code-line.component.html',\n  styleUrls: ['./code-line.component.css']\n})\nexport class CodeLineComponent implements OnInit {\n  @HostBinding('style.backgroundColor') backgroundColor: SafeStyle;\n  @Input() setBackgroundColor: string;\n  @Input() codeLine: CodeLineModel;\n  constructor(private lineService: LineService) {\n  }\n\n  ngOnInit(): void {\n    this.backgroundColor = this.setBackgroundColor;\n    this.codeLine = this.lineService.lineModel;\n  }\n\n}\n","<div class=\"code-line\">\n  <div class=\"line-num\">\n    000100\n  </div>\n  <div class=\"code\">\n    <pre>HABASUBA DABA</pre>\n  </div>\n  <div class=\"order\">\n    000100\n  </div>\n  <div class=\"statement\">\n    000100\n  </div>\n</div>\n<div class=\"code-line\">\n  <div class=\"line-num\">\n    000100\n  </div>\n  <div class=\"code\">\n    <pre>habasuba daba</pre>\n  </div>\n  <div class=\"order\">\n    000100\n  </div>\n  <div class=\"statement\">\n    000100\n  </div>\n</div>\n<div class=\"code-line\">\n  <div class=\"line-num\">\n    {{this.codeLine.lineNumber}}\n  </div>\n  <div class=\"code\">\n    <pre>{{this.codeLine.code}}</pre>\n  </div>\n  <div class=\"order\">\n    {{this.codeLine.order}}\n  </div>\n  <div class=\"statement\">\n    {{this.codeLine.statement}}\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {CodeHttpService} from '../../../services/code-http.service';\nimport {log} from 'util';\n\n@Component({\n  selector: 'app-code-side',\n  templateUrl: './code-side.component.html',\n  styleUrls: ['./code-side.component.css']\n})\nexport class CodeSideComponent implements OnInit {\n\n  constructor(private codeHttpService: CodeHttpService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onClick() {\n    this.codeHttpService.postCoobitFileLocation({filePath: 'hello world!'}).subscribe(\n      value => console.log('sucess')\n    );\n  }\n}\n","<div class=\"code-side-container\">\n   <app-code-line></app-code-line>\n  <button (click)=\"onClick()\">Nyomj meg</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-trace',\n  templateUrl: './trace.component.html',\n  styleUrls: ['./trace.component.css']\n})\nexport class TraceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-code-side></app-code-side>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CodeModel} from '../models/code.model';\nimport {FileLocationModel} from '../models/fileLocation.model';\n\nconst CODE_BASE_URL = 'http://localhost:8080/api/coblist';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodeHttpService {\n\n  constructor(private http: HttpClient) { }\n\n  postCoobitFileLocation(fileLocation: FileLocationModel): Observable<CodeModel> {\n    return this.http.post<CodeModel>(CODE_BASE_URL, fileLocation);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {CodeLineModel} from '../models/codeLine.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LineService {\n  lineModel: CodeLineModel;\n\n  constructor() {\n    this.lineModel = {\n      lineNumber: 100,\n      code: '1234567890123456789012345678901234567890',\n      order: 100,\n      statement: 100,\n      lineBackgroundColor: 'undefined'\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}