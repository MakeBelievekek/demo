{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Directives/line-manipulator.directive.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/trace/code-side/code-line/code-line.component.ts","webpack:///src/app/components/trace/code-side/code-line/code-line.component.html","webpack:///src/app/components/trace/code-side/code-side.component.ts","webpack:///src/app/components/trace/code-side/code-side.component.html","webpack:///src/app/components/trace/trace.component.ts","webpack:///src/app/components/trace/trace.component.html","webpack:///src/app/components/trace/widget-side/debugger/debugger.component.ts","webpack:///src/app/components/trace/widget-side/debugger/debugger.component.html","webpack:///src/app/components/trace/widget-side/file-widget/file-widget.component.ts","webpack:///src/app/components/trace/widget-side/file-widget/file-widget.component.html","webpack:///src/app/components/trace/widget-side/player/player.component.ts","webpack:///src/app/components/trace/widget-side/player/player.component.html","webpack:///src/app/components/trace/widget-side/widget-side.component.ts","webpack:///src/app/components/trace/widget-side/widget-side.component.html","webpack:///src/app/models/bkp.model.ts","webpack:///src/app/services/code-http.service.ts","webpack:///src/app/services/debugger-http.service.ts","webpack:///src/app/services/line.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","LineManipulatorDirective","elRef","codeLine","activeLine","subscribe","value","nativeElement","scrollIntoView","block","inline","backgroundColor","lineBackgroundColor","selector","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","title","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CodeLineComponent","lineService","setBackgroundColor","CodeSideComponent","codeHttpService","codeModel","TraceComponent","DebuggerComponent","debuggerHttpService","debuggerModelList","conditionOptions","compare","varNum","multiPgmDebugger","batch","console","log","postDebug","command","debuggerModelNumber","debuggerModelListNumber","bkpList","push","splice","modelNumber","program","debuggerM","sendBkp","bkp","hasCondition","condition","conditionValue","isConditionValueNumber","pgmvarForCondition","handlePgm","getData","FileWidgetComponent","tracePath","coblistPath","postCooblistFileLocation","filePath","codeLines","generateOmniStatements","postTraceFileLocation","traceList","setTraceToStatement","getCoblist","getTrace","PlayerComponent","singleStatement","startingOrder","makeActiveLine","goToStatement","previousStatement","nextStatement","WidgetSideComponent","BkpModelClass","statement","pgmvar1","pgmvar2","pgmvar3","pgmvar4","pgmvar5","pgmvar6","pgmvar7","pgmvar8","pgmvar9","pgmvar10","CODE_BASE_URL","CodeHttpService","http","fileLocation","post","get","providedIn","DebuggerHttpService","debugData","LineService","omniStatements","omniOrders","forEach","traceDtoModel","order","orderNumber","num","lineToManipulate","next","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Directive, ElementRef, HostBinding, Input, OnInit} from '@angular/core';\nimport {CodeLineModel} from '../models/codeLine.model';\nimport {SafeStyle} from '@angular/platform-browser';\n\n@Directive({\n  selector: '[appLineManipulator]'\n})\nexport class LineManipulatorDirective implements OnInit {\n  @Input() codeLine: CodeLineModel;\n  @HostBinding('style.backgroundColor') backgroundColor: SafeStyle;\n\n  constructor(private elRef: ElementRef) {\n  }\n\n  ngOnInit(): void {\n    if (this.codeLine.activeLine) {\n      this.codeLine.activeLine.subscribe(value => {\n        if (value === 'makeActive') {\n          this.elRef.nativeElement.scrollIntoView({ block: 'center', inline: 'center'});\n          this.backgroundColor = this.codeLine.lineBackgroundColor;\n        } else if (value === 'deActivate') {\n          this.backgroundColor = this.codeLine.lineBackgroundColor;\n        }\n      });\n    }\n  }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TraceComponent} from './components/trace/trace.component';\nimport {DebuggerComponent} from './components/trace/widget-side/debugger/debugger.component';\n\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'trace'},\n  {path: 'trace', component: TraceComponent},\n  {path: 'debug', component: DebuggerComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngFX';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CodeSideComponent } from './components/trace/code-side/code-side.component';\nimport { CodeLineComponent } from './components/trace/code-side/code-line/code-line.component';\nimport { TraceComponent } from './components/trace/trace.component';\nimport { WidgetSideComponent } from './components/trace/widget-side/widget-side.component';\nimport { FileWidgetComponent } from './components/trace/widget-side/file-widget/file-widget.component';\nimport {FormsModule} from '@angular/forms';\nimport { LineManipulatorDirective } from './Directives/line-manipulator.directive';\nimport { PlayerComponent } from './components/trace/widget-side/player/player.component';\nimport { DebuggerComponent } from './components/trace/widget-side/debugger/debugger.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CodeSideComponent,\n    CodeLineComponent,\n    TraceComponent,\n    WidgetSideComponent,\n    FileWidgetComponent,\n    LineManipulatorDirective,\n    PlayerComponent,\n    DebuggerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {LineService} from '../../../../services/line.service';\r\nimport {SafeStyle} from '@angular/platform-browser';\r\nimport {CodeLineModel} from '../../../../models/codeLine.model';\r\nimport {CodeModel} from '../../../../models/code.model';\r\n\r\n@Component({\r\n  selector: 'app-code-line',\r\n  templateUrl: './code-line.component.html',\r\n  styleUrls: ['./code-line.component.css']\r\n})\r\nexport class CodeLineComponent implements OnInit {\r\n  @HostBinding('style.backgroundColor') backgroundColor: SafeStyle;\r\n  @Input() setBackgroundColor: string;\r\n  @Input() codeLine: CodeLineModel;\r\n\r\n  constructor(private lineService: LineService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.backgroundColor = this.setBackgroundColor;\r\n  }\r\n\r\n}\r\n","<div class=\"code-line\" appLineManipulator [codeLine]=\"this.codeLine\">\n  <div class=\"line-num\">\n    {{this.codeLine.lineNumber}}\n  </div>\n  <div class=\"code\">\n    <pre>{{this.codeLine.code}}</pre>\n  </div>\n  <div class=\"statement\">\n    {{this.codeLine.statement}}\n  </div>\n  <div class=\"order\">\n    {{this.codeLine.order}}\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {CodeHttpService} from '../../../services/code-http.service';\nimport {log} from 'util';\nimport {LineService} from '../../../services/line.service';\nimport {CodeModel} from '../../../models/code.model';\n\n@Component({\n  selector: 'app-code-side',\n  templateUrl: './code-side.component.html',\n  styleUrls: ['./code-side.component.css']\n})\nexport class CodeSideComponent implements OnInit {\n  codeModel: CodeModel;\n\n  constructor(private codeHttpService: CodeHttpService, private lineService: LineService) {\n  }\n\n  ngOnInit(): void {\n    this.codeModel = this.lineService.codeModel;\n  }\n\n}\n","<div class=\"code-side-container\">\n  <ng-container *ngFor=\"let codeLine of this?.codeModel?.codeLines\">\n   <app-code-line [codeLine]=\"codeLine\"></app-code-line>\n  </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-trace',\n  templateUrl: './trace.component.html',\n  styleUrls: ['./trace.component.css']\n})\nexport class TraceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"trace-container\">\n  <div class=\"trace-code-side\">\n    <app-code-side></app-code-side>\n  </div>\n  <div class=\"trace-widget-side\">\n    <app-widget-side></app-widget-side>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {BkpModel, BkpModelClass} from '../../../../models/bkp.model';\nimport {MultiplePgmModel} from '../../../../models/multiplePgm.model';\nimport {DebuggerModel} from '../../../../models/debugger.model';\nimport {DebuggerHttpService} from '../../../../services/debugger-http.service';\n\n@Component({\n  selector: 'app-debugger',\n  templateUrl: './debugger.component.html',\n  styleUrls: ['./debugger.component.css']\n})\nexport class DebuggerComponent implements OnInit {\n  debuggerModelList: Array<DebuggerModel> = [];\n  multiPgmDebugger: MultiplePgmModel;\n  conditionOptions = {\n    compare: ['*EQ', '*GT', '*LT', '*NE', '*GE', '*NL', '*LE', '*NG', '*CT']\n    , varNum: ['*PGMVAR1', '*PGMVAR2', '*PGMVAR3', '*PGMVAR4', '*PGMVAR5', '*PGMVAR6', '*PGMVAR7', '*PGMVAR8', '*PGMVAR9', '*PGMVAR10']\n  };\n\n\n  constructor(private debuggerHttpService: DebuggerHttpService) {\n  }\n\n  ngOnInit(): void {\n    this.multiPgmDebugger = {debuggerModelList: [], batch: false};\n  }\n\n  getData() {\n    this.multiPgmDebugger.debuggerModelList = this.debuggerModelList;\n    console.log('debuggerModel: ', this.multiPgmDebugger);\n    this.debuggerHttpService.postDebug(this.multiPgmDebugger).subscribe();\n  }\n\n  handleBkp(command: string, debuggerModelNumber?: number, debuggerModelListNumber?: number): void {\n    console.log('modelNumber: ', debuggerModelNumber);\n    console.log('listNumber: ', debuggerModelListNumber);\n    if (command === 'add') {\n      this.debuggerModelList[debuggerModelNumber].bkpList.push(new BkpModelClass());\n      console.log(this.debuggerModelList[debuggerModelNumber]);\n    }\n    if (command === 'rmv') {\n      console.log(debuggerModelListNumber);\n      this.debuggerModelList[debuggerModelNumber].bkpList.splice(debuggerModelListNumber, 1);\n    }\n\n  }\n\n  handlePgm(command: string, modelNumber?: number): void {\n    if (command === 'add') {\n      this.debuggerModelList.push({program: '', bkpList: [new BkpModelClass()]});\n    }\n    if (command === 'rmv') {\n      this.debuggerModelList.splice(modelNumber, 1);\n    }\n  }\n\n  sendBKP(debuggerM: DebuggerModel) {\n    this.debuggerHttpService.sendBkp(debuggerM).subscribe();\n  }\n\n  conditionHandler(bkp: BkpModel) {\n    bkp.hasCondition = !bkp.hasCondition;\n    if (!bkp.hasCondition) {\n      bkp.condition = null;\n      bkp.conditionValue = null;\n      bkp.isConditionValueNumber = false;\n      bkp.pgmvarForCondition = null;\n    }\n  }\n}\n\n//\n","<div class=\"debugger-flex-container\">\n  <div class=\"debugger-pgm-item\" *ngFor=\"let debuggerM of this.debuggerModelList; index as j\">\n    <label for=\"pgm\">PGM: </label>\n    <input type=\"text\" [(ngModel)]=\"debuggerM.program\" id=\"pgm\" placeholder=\"program\">\n    <div class=\"debugger-bkp-panel\">\n      <div class=\"debugger-item\" *ngFor=\"let bkpEntity of debuggerM.bkpList; index as i\">\n        <label>BKP: </label>\n        <input type=\"text\" [(ngModel)]=\"bkpEntity.statement\" placeholder=\"addbkp\">\n        <label>Var 1 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n        <input type=\"text\" [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar1\" placeholder=\"pgmVar\">\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].pgmvar1 ||this.debuggerM.bkpList[i].pgmvar2\">\n          <label>Var 2 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n          <input type=\"text\"\n                 [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar2\" placeholder=\"pgmVar\">\n        </ng-container>\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].pgmvar2 || this.debuggerM.bkpList[i].pgmvar3\">\n          <label>Var 3 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n          <input type=\"text\"\n                 [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar3\" placeholder=\"pgmVar\">\n        </ng-container>\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].pgmvar3 || this.debuggerM.bkpList[i].pgmvar4\">\n          <label>Var 4 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n          <input type=\"text\"\n                 [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar4\" placeholder=\"pgmVar\">\n        </ng-container>\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].pgmvar4 || this.debuggerM.bkpList[i].pgmvar5\">\n          <label>Var 5 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n          <input type=\"text\"\n                 [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar5\" placeholder=\"pgmVar\">\n        </ng-container>\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].pgmvar5 || this.debuggerM.bkpList[i].pgmvar6\">\n          <label>Var 6 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n          <input type=\"text\"\n                 [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar6\" placeholder=\"pgmVar\">\n        </ng-container>\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].pgmvar6 || this.debuggerM.bkpList[i].pgmvar7\">\n          <label>Var 7 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n          <input type=\"text\"\n                 [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar7\" placeholder=\"pgmVar\">\n        </ng-container>\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].pgmvar7 || this.debuggerM.bkpList[i].pgmvar8\">\n          <label>Var 8 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n          <input type=\"text\"\n                 [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar8\" placeholder=\"pgmVar\">\n        </ng-container>\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].pgmvar8 || this.debuggerM.bkpList[i].pgmvar9\">\n          <label>Var 9 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n          <input type=\"text\"\n                 [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar9\" placeholder=\"pgmVar\">\n        </ng-container>\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].pgmvar9  || this.debuggerM.bkpList[i].pgmvar10\">\n          <label>Var 10 {{debuggerM.program}} BKP {{bkpEntity.statement}}</label>\n          <input type=\"text\"\n                 [(ngModel)]=\"this.debuggerM.bkpList[i].pgmvar10\" placeholder=\"pgmVar\">\n        </ng-container>\n        <ng-container *ngIf=\"this.debuggerM.bkpList[i].hasCondition\">\n          <select [(ngModel)]=\"debuggerM.bkpList[i].condition\">\n            <option *ngFor=\"let option of this.conditionOptions.compare\"\n                    value=\"{{option}}\"\n            >{{option}}</option>\n          </select>\n          <select [(ngModel)]=\"debuggerM.bkpList[i].pgmvarForCondition\">\n            <option *ngFor=\"let varNum of this.conditionOptions.varNum\"\n                    value=\"{{varNum}}\"\n            >{{varNum}}</option>\n          </select>\n          <input type=\"text\" [(ngModel)]=\"this.debuggerM.bkpList[i].conditionValue\" placeholder=\"whatToCompare\">\n          <div style=\"display: flex\">\n            <label for=\"isNumeric\">is numeric what u compare to</label>\n            <input type=\"checkbox\" id=\"isNumeric\" [(ngModel)]=\"this.debuggerM.bkpList[i].isConditionValueNumber\">\n          </div>\n        </ng-container>\n        <button (click)=\"conditionHandler(debuggerM.bkpList[i])\">condition</button>\n        <button (click)=\"handleBkp('rmv', j, i)\">rmv bkp</button>\n      </div>\n    </div>\n    <button (click)=\"handleBkp('add', j)\">add bkp</button>\n    <button (click)=\"sendBKP(debuggerM)\">JUST BKP</button>\n    <button (click)=\"handlePgm('rmv',j)\">RMV PGM</button>\n  </div>\n\n</div>\n<button (click)=\"handlePgm('add')\">ADD NEW PGM</button>\n<button (click)=\"getData()\">set debug</button>\n<label for=\"batch\">batch</label>\n<input type=\"checkbox\" id=\"batch\" [(ngModel)]=\"multiPgmDebugger.batch\">\n\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpEventType, HttpResponse} from '@angular/common/http';\r\nimport {CodeHttpService} from '../../../../services/code-http.service';\r\nimport {CodeModel} from '../../../../models/code.model';\r\nimport {LineService} from '../../../../services/line.service';\r\n\r\n@Component({\r\n  selector: 'app-file-widget',\r\n  templateUrl: './file-widget.component.html',\r\n  styleUrls: ['./file-widget.component.css']\r\n})\r\nexport class FileWidgetComponent implements OnInit {\r\n  @ViewChild('coblist') coblistElement: ElementRef;\r\n  coblistPath: string;\r\n  tracePath: string;\r\n\r\n  constructor(private codeHttpService: CodeHttpService, private lineService: LineService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tracePath = 'C:\\\\Users\\\\Pupu\\\\Desktop\\\\res\\\\trace.txt';\r\n    this.coblistPath = 'C:\\\\Users\\\\Pupu\\\\Desktop\\\\res\\\\kek.txt';\r\n  }\r\n\r\n\r\n  getCoblist() {\r\n    if (this.coblistPath) {\r\n      this.codeHttpService.postCooblistFileLocation({filePath: this.coblistPath}).subscribe(\r\n        value => {\r\n          this.lineService.codeModel.codeLines = (value as CodeModel).codeLines;\r\n          this.lineService.generateOmniStatements();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getTrace() {\r\n    if (this.tracePath) {\r\n      this.codeHttpService.postTraceFileLocation({filePath: this.tracePath}).subscribe(\r\n        value => {\r\n          this.lineService.codeModel.traceList = value.traceList;\r\n          this.lineService.setTraceToStatement();\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// C:\\Users\\Pupu\\Desktop\\res\\kek.txt\r\n// C:\\Users\\Pupu\\Desktop\\res\\trace.txt\r\n","<div>\r\n  <input type=\"text\" [(ngModel)]=\"this.coblistPath\" size=\"40\" placeholder=\"insert coblist path here\">\r\n  <div><button (click)=\"getCoblist()\">coblist load</button></div>\r\n  <input type=\"text\" [(ngModel)]=\"this.tracePath\" size=\"40\" placeholder=\"insert coblist path here\">\r\n  <div><button (click)=\"getTrace()\">trace load</button></div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\nimport {LineService} from '../../../../services/line.service';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.css']\n})\nexport class PlayerComponent implements OnInit {\n  singleStatement: number;\n  startingOrder: number;\n\n  constructor(private lineService: LineService) {\n  }\n\n  ngOnInit(): void {\n    this.singleStatement = 322;\n    this.startingOrder = 322;\n  }\n\n  goToStatement() {\n    this.lineService.makeActiveLine(this.singleStatement, 'statement');\n  }\n\n\n  nextStatement() {\n    this.lineService.makeActiveLine(++this.startingOrder, 'order');\n  }\n\n  previousStatement() {\n    this.lineService.makeActiveLine(--this.startingOrder, 'order');\n  }\n}\n","<div class=\"file-statement-go-to\">\n<input type=\"text\" [(ngModel)]=\"this.singleStatement\" size=\"5\" placeholder=\"statement\">\n<button (click)=\"goToStatement()\">vigyél oda</button>\n\n</div>\n<div class=\"file-statement-player\">\n  <input type=\"text\" [(ngModel)]=\"this.startingOrder\" size=\"5\" placeholder=\"stmntToStart\">\n  <button (click)=\"previousStatement()\">prev</button>\n  <button (click)=\"nextStatement()\">next</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-widget-side',\n  templateUrl: './widget-side.component.html',\n  styleUrls: ['./widget-side.component.css']\n})\nexport class WidgetSideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"widget-side-container\">\n  <div class=\"first-item\">\n    <app-file-widget></app-file-widget>\n    <app-player></app-player>\n    <app-debugger></app-debugger>\n  </div>\n</div>\n","export interface BkpModel {\r\n  statement: number;\r\n  pgmvar1: string;\r\n  pgmvar2: string;\r\n  pgmvar3: string;\r\n  pgmvar4: string;\r\n  pgmvar5: string;\r\n  pgmvar6: string;\r\n  pgmvar7: string;\r\n  pgmvar8: string;\r\n  pgmvar9: string;\r\n  pgmvar10: string;\r\n  hasCondition: boolean;\r\n  pgmvarForCondition: string;\r\n  condition: string;\r\n  conditionValue: string;\r\n  isConditionValueNumber: boolean;\r\n}\r\n\r\nexport class BkpModelClass implements BkpModel {\r\n  statement: number = null;\r\n  pgmvar1 = null;\r\n  pgmvar2 = null;\r\n  pgmvar3 = null;\r\n  pgmvar4 = null;\r\n  pgmvar5 = null;\r\n  pgmvar6 = null;\r\n  pgmvar7 = null;\r\n  pgmvar8 = null;\r\n  pgmvar9 = null;\r\n  pgmvar10 = null;\r\n  hasCondition = false;\r\n  pgmvarForCondition = null;\r\n  condition = null;\r\n  conditionValue = null;\r\n  isConditionValueNumber = false;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpEvent, HttpParams, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {CodeModel} from '../models/code.model';\r\nimport {FileLocationModel} from '../models/fileLocation.model';\r\n\r\nconst CODE_BASE_URL = 'http://localhost:8080/api/file';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CodeHttpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postCooblistFileLocation(fileLocation: FileLocationModel): Observable<CodeModel> {\r\n    return this.http.post<CodeModel>(CODE_BASE_URL + '/coblist', fileLocation);\r\n  }\r\n\r\n  postTraceFileLocation(fileLocation: FileLocationModel): Observable<CodeModel> {\r\n    return this.http.post<CodeModel>(CODE_BASE_URL + '/trace', fileLocation);\r\n  }\r\n\r\n  redirect(): Observable<any> {\r\n    return this.http.get<any>(CODE_BASE_URL);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {FileLocationModel} from '../models/fileLocation.model';\nimport {Observable} from 'rxjs';\nimport {CodeModel} from '../models/code.model';\nimport {MultiplePgmModel} from '../models/multiplePgm.model';\nimport {DebuggerModel} from '../models/debugger.model';\n\nconst CODE_BASE_URL = 'http://localhost:8080/api/debug';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DebuggerHttpService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  postDebug(debugData: MultiplePgmModel): Observable<any> {\n    return this.http.post<any>(CODE_BASE_URL + '/online', debugData);\n  }\n\n  sendBkp(debuggerM: DebuggerModel): Observable<any> {\n    return this.http.post<any>(CODE_BASE_URL + '/bkp', debuggerM);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {CodeLineModel} from '../models/codeLine.model';\r\nimport {CodeModel} from '../models/code.model';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LineService {\r\n  codeModel: CodeModel;\r\n  omniStatements: any;\r\n  omniOrders: any;\r\n  activeLine: CodeLineModel;\r\n\r\n  constructor() {\r\n    this.codeModel = {codeLines: [], traceList: []};\r\n    this.omniStatements = {};\r\n    this.omniOrders = {};\r\n  }\r\n\r\n  generateOmniStatements() {\r\n    this.codeModel.codeLines.forEach(codeLine => {\r\n      if (codeLine.statement) {\r\n        this.omniStatements[codeLine.statement] = codeLine;\r\n        this.omniStatements[codeLine.statement].activeLine = new Subject<any>();\r\n      }\r\n    });\r\n  }\r\n\r\n  setTraceToStatement() {\r\n    this.codeModel.traceList.forEach(traceDtoModel => {\r\n      if (this.omniStatements[traceDtoModel.statement]) {\r\n        this.omniStatements[traceDtoModel.statement].order = traceDtoModel.orderNumber;\r\n      }\r\n    });\r\n    this.codeModel.traceList.forEach(traceDtoModel => {\r\n      this.omniOrders[traceDtoModel.orderNumber] = traceDtoModel;\r\n    });\r\n    console.log(this.omniOrders);\r\n  }\r\n\r\n  makeActiveLine(num: number, command: string): void {\r\n    let lineToManipulate;\r\n    if (command === 'statement') {\r\n      lineToManipulate = this.omniStatements[num];\r\n    }\r\n\r\n    if (command === 'order') {\r\n      lineToManipulate = this.omniStatements[this?.omniOrders[num]?.statement];\r\n    }\r\n\r\n    if (lineToManipulate) {\r\n      lineToManipulate.lineBackgroundColor = 'yellowgreen';\r\n      lineToManipulate.activeLine.next('makeActive');\r\n\r\n      if (this.activeLine && this.activeLine !== lineToManipulate) {\r\n        this.activeLine.lineBackgroundColor = 'black';\r\n        this.activeLine.activeLine.next('deActivate');\r\n      }\r\n\r\n      this.activeLine = lineToManipulate;\r\n    }\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}