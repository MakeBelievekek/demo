{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Directives/line-manipulator.directive.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/trace/code-side/code-line/code-line.component.ts","webpack:///src/app/components/trace/code-side/code-line/code-line.component.html","webpack:///src/app/components/trace/code-side/code-side.component.ts","webpack:///src/app/components/trace/code-side/code-side.component.html","webpack:///src/app/components/trace/trace.component.ts","webpack:///src/app/components/trace/trace.component.html","webpack:///src/app/components/trace/widget-side/file-widget/file-widget.component.ts","webpack:///src/app/components/trace/widget-side/file-widget/file-widget.component.html","webpack:///src/app/components/trace/widget-side/widget-side.component.ts","webpack:///src/app/components/trace/widget-side/widget-side.component.html","webpack:///src/app/services/code-http.service.ts","webpack:///src/app/services/line.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","LineManipulatorDirective","elRef","codeLine","activeLine","subscribe","value","nativeElement","scrollIntoView","backgroundColor","lineBackgroundColor","selector","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","title","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CodeLineComponent","lineService","setBackgroundColor","CodeSideComponent","codeHttpService","codeModel","TraceComponent","FileWidgetComponent","console","log","codeLines","coblistPath","postCooblistFileLocation","filePath","generateOmniStatements","tracePath","postTraceFileLocation","traceList","setTraceToStatement","omniStatements","next","redirect","getCoblist","getTrace","takeMeHome","WidgetSideComponent","CODE_BASE_URL","CodeHttpService","http","fileLocation","post","get","providedIn","LineService","forEach","statement","traceDtoModel","order","orderNumber","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Directive, ElementRef, HostBinding, Input, OnInit} from '@angular/core';\nimport {CodeLineModel} from '../models/codeLine.model';\nimport {SafeStyle} from '@angular/platform-browser';\n\n@Directive({\n  selector: '[appLineManipulator]'\n})\nexport class LineManipulatorDirective implements OnInit{\n  @Input() codeLine: CodeLineModel;\n  @HostBinding('style.backgroundColor') backgroundColor: SafeStyle;\n\n  constructor(private elRef: ElementRef) {\n  }\n\n  ngOnInit(): void {\n    if (this.codeLine.activeLine) {\n      this.codeLine.activeLine.subscribe(value => {\n        this.elRef.nativeElement.scrollIntoView();\n        this.backgroundColor = this.codeLine.lineBackgroundColor;\n      });\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TraceComponent} from './components/trace/trace.component';\nimport {WidgetSideComponent} from './components/trace/widget-side/widget-side.component';\n\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'trace'},\n  {path: 'trace', component: TraceComponent},\n  {path: 'shit', component: WidgetSideComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngFX';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CodeSideComponent } from './components/trace/code-side/code-side.component';\nimport { CodeLineComponent } from './components/trace/code-side/code-line/code-line.component';\nimport { TraceComponent } from './components/trace/trace.component';\nimport { WidgetSideComponent } from './components/trace/widget-side/widget-side.component';\nimport { FileWidgetComponent } from './components/trace/widget-side/file-widget/file-widget.component';\nimport {FormsModule} from '@angular/forms';\nimport { LineManipulatorDirective } from './Directives/line-manipulator.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CodeSideComponent,\n    CodeLineComponent,\n    TraceComponent,\n    WidgetSideComponent,\n    FileWidgetComponent,\n    LineManipulatorDirective,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\r\nimport {LineService} from '../../../../services/line.service';\r\nimport {SafeStyle} from '@angular/platform-browser';\r\nimport {CodeLineModel} from '../../../../models/codeLine.model';\r\nimport {CodeModel} from '../../../../models/code.model';\r\n\r\n@Component({\r\n  selector: 'app-code-line',\r\n  templateUrl: './code-line.component.html',\r\n  styleUrls: ['./code-line.component.css']\r\n})\r\nexport class CodeLineComponent implements OnInit {\r\n  @HostBinding('style.backgroundColor') backgroundColor: SafeStyle;\r\n  @Input() setBackgroundColor: string;\r\n  @Input() codeLine: CodeLineModel;\r\n\r\n  constructor(private lineService: LineService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.backgroundColor = this.setBackgroundColor;\r\n  }\r\n\r\n}\r\n","<div class=\"code-line\" appLineManipulator [codeLine]=\"this.codeLine\">\n  <div class=\"line-num\">\n    {{this.codeLine.lineNumber}}\n  </div>\n  <div class=\"code\">\n    <pre>{{this.codeLine.code}}</pre>\n  </div>\n  <div class=\"statement\">\n    {{this.codeLine.statement}}\n  </div>\n  <div class=\"order\">\n    {{this.codeLine.order}}\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {CodeHttpService} from '../../../services/code-http.service';\nimport {log} from 'util';\nimport {LineService} from '../../../services/line.service';\nimport {CodeModel} from '../../../models/code.model';\n\n@Component({\n  selector: 'app-code-side',\n  templateUrl: './code-side.component.html',\n  styleUrls: ['./code-side.component.css']\n})\nexport class CodeSideComponent implements OnInit {\n  codeModel: CodeModel;\n\n  constructor(private codeHttpService: CodeHttpService, private lineService: LineService) {\n  }\n\n  ngOnInit(): void {\n    this.codeModel = this.lineService.codeModel;\n  }\n\n}\n","<div class=\"code-side-container\">\n  <ng-container *ngFor=\"let codeLine of this?.codeModel?.codeLines\">\n   <app-code-line [codeLine]=\"codeLine\"></app-code-line>\n  </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-trace',\n  templateUrl: './trace.component.html',\n  styleUrls: ['./trace.component.css']\n})\nexport class TraceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"trace-container\">\n  <div class=\"trace-code-side\">\n    <app-code-side></app-code-side>\n  </div>\n  <div class=\"trace-widget-side\">\n    <app-widget-side></app-widget-side>\n  </div>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpEventType, HttpResponse} from '@angular/common/http';\r\nimport {CodeHttpService} from '../../../../services/code-http.service';\r\nimport {CodeModel} from '../../../../models/code.model';\r\nimport {LineService} from '../../../../services/line.service';\r\n\r\n@Component({\r\n  selector: 'app-file-widget',\r\n  templateUrl: './file-widget.component.html',\r\n  styleUrls: ['./file-widget.component.css']\r\n})\r\nexport class FileWidgetComponent implements OnInit {\r\n  @ViewChild('coblist') coblistElement: ElementRef;\r\n  coblistPath: string;\r\n  tracePath: string;\r\n\r\n  constructor(private codeHttpService: CodeHttpService, private lineService: LineService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.lineService.codeModel.codeLines);\r\n  }\r\n\r\n\r\n  getCoblist() {\r\n    if (this.coblistPath) {\r\n      this.codeHttpService.postCooblistFileLocation({filePath: this.coblistPath}).subscribe(\r\n        value => {\r\n          this.lineService.codeModel.codeLines = (value as CodeModel).codeLines;\r\n          this.lineService.generateOmniStatements();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getTrace() {\r\n    if (this.tracePath) {\r\n      this.codeHttpService.postTraceFileLocation({filePath: this.tracePath}).subscribe(\r\n        value => {\r\n          this.lineService.codeModel.traceList = value.traceList;\r\n          this.lineService.setTraceToStatement();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  takeMeHome() {\r\n    this.lineService.omniStatements[322].lineBackgroundColor = 'yellow';\r\n    this.lineService.omniStatements[322].activeLine.next('baszodjmeg');\r\n    console.log(this.lineService.omniStatements[322]);\r\n  }\r\n\r\n  redirect() {\r\n    this.codeHttpService.redirect().subscribe();\r\n  }\r\n}\r\n\r\n// C:\\Users\\Pupu\\Desktop\\res\\kek.txt\r\n// C:\\Users\\Pupu\\Desktop\\res\\trace.txt\r\n","<div>\r\n  <input type=\"text\" [(ngModel)]=\"this.coblistPath\" size=\"55\" placeholder=\"insert coblist path here\">\r\n  <div><button (click)=\"getCoblist()\">coblist load</button></div>\r\n  <input type=\"text\" [(ngModel)]=\"this.tracePath\" size=\"55\" placeholder=\"insert coblist path here\">\r\n  <div><button (click)=\"getTrace()\">trace load</button></div>\r\n  <div><button (click)=\"takeMeHome()\">tekerj oda</button></div>\r\n  <button (click)=\"redirect()\">redirect</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-widget-side',\n  templateUrl: './widget-side.component.html',\n  styleUrls: ['./widget-side.component.css']\n})\nexport class WidgetSideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"widget-side-container\">\n  <div class=\"first-item\">\n    <app-file-widget></app-file-widget>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpEvent, HttpParams, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {CodeModel} from '../models/code.model';\r\nimport {FileLocationModel} from '../models/fileLocation.model';\r\n\r\nconst CODE_BASE_URL = 'http://localhost:8080/api/file';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CodeHttpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postCooblistFileLocation(fileLocation: FileLocationModel): Observable<CodeModel> {\r\n    return this.http.post<CodeModel>(CODE_BASE_URL + '/coblist', fileLocation);\r\n  }\r\n\r\n  postTraceFileLocation(fileLocation: FileLocationModel): Observable<CodeModel> {\r\n    return this.http.post<CodeModel>(CODE_BASE_URL + '/trace', fileLocation);\r\n  }\r\n\r\n  redirect(): Observable<any> {\r\n    return this.http.get<any>(CODE_BASE_URL);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CodeLineModel} from '../models/codeLine.model';\r\nimport {CodeModel} from '../models/code.model';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LineService {\r\n  codeModel: CodeModel;\r\n  omniStatements: any;\r\n\r\n  constructor() {\r\n    this.codeModel = {codeLines: [], traceList: []};\r\n    this.omniStatements = {};\r\n  }\r\n\r\n  generateOmniStatements() {\r\n    this.codeModel.codeLines.forEach(codeLine => {\r\n      if (codeLine.statement) {\r\n        this.omniStatements[codeLine.statement] = codeLine;\r\n        this.omniStatements[codeLine.statement].activeLine = new Subject<any>();\r\n      }\r\n    });\r\n  }\r\n\r\n  setTraceToStatement() {\r\n    this.codeModel.traceList.forEach(traceDtoModel => {\r\n      if (this.omniStatements[traceDtoModel.statement]) {\r\n        this.omniStatements[traceDtoModel.statement].order = traceDtoModel.orderNumber;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}