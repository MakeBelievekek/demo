{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/trace/code-side/code-line/code-line.component.ts","./src/app/components/trace/code-side/code-line/code-line.component.html","./src/app/components/trace/code-side/code-side.component.ts","./src/app/components/trace/code-side/code-side.component.html","./src/app/components/trace/trace.component.ts","./src/app/components/trace/trace.component.html","./src/app/services/code-http.service.ts","./src/app/services/line.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TraceComponent} from './components/trace/trace.component';\n\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'trace'},\n  {path: 'trace', component: TraceComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngFX';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CodeSideComponent } from './components/trace/code-side/code-side.component';\nimport { CodeLineComponent } from './components/trace/code-side/code-line/code-line.component';\nimport { TraceComponent } from './components/trace/trace.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CodeSideComponent,\n    CodeLineComponent,\n    TraceComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {LineService} from '../../../../services/line.service';\nimport {SafeStyle} from '@angular/platform-browser';\nimport {CodeLineModel} from '../../../../models/codeLine.model';\n\n@Component({\n  selector: 'app-code-line',\n  templateUrl: './code-line.component.html',\n  styleUrls: ['./code-line.component.css']\n})\nexport class CodeLineComponent implements OnInit {\n  @HostBinding('style.backgroundColor') backgroundColor: SafeStyle;\n  @Input() setBackgroundColor: string;\n  @Input() codeLine: CodeLineModel;\n  constructor(private lineService: LineService) {\n  }\n\n  ngOnInit(): void {\n    this.backgroundColor = this.setBackgroundColor;\n    this.codeLine = this.lineService.lineModel;\n  }\n\n}\n","<div class=\"code-line\">\n  <div class=\"line-num\">\n    000100\n  </div>\n  <div class=\"code\">\n    <pre>HABASUBA DABA</pre>\n  </div>\n  <div class=\"order\">\n    000100\n  </div>\n  <div class=\"statement\">\n    000100\n  </div>\n</div>\n<div class=\"code-line\">\n  <div class=\"line-num\">\n    000100\n  </div>\n  <div class=\"code\">\n    <pre>habasuba daba</pre>\n  </div>\n  <div class=\"order\">\n    000100\n  </div>\n  <div class=\"statement\">\n    000100\n  </div>\n</div>\n<div class=\"code-line\">\n  <div class=\"line-num\">\n    {{this.codeLine.lineNumber}}\n  </div>\n  <div class=\"code\">\n    <pre>{{this.codeLine.code}}</pre>\n  </div>\n  <div class=\"order\">\n    {{this.codeLine.order}}\n  </div>\n  <div class=\"statement\">\n    {{this.codeLine.statement}}\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {CodeHttpService} from '../../../services/code-http.service';\nimport {log} from 'util';\n\n@Component({\n  selector: 'app-code-side',\n  templateUrl: './code-side.component.html',\n  styleUrls: ['./code-side.component.css']\n})\nexport class CodeSideComponent implements OnInit {\n\n  constructor(private codeHttpService: CodeHttpService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onClick() {\n    this.codeHttpService.postCoobitFileLocation({filePath: 'hello world!'}).subscribe(\n      value => console.log('sucess')\n    );\n  }\n}\n","<div class=\"code-side-container\">\n   <app-code-line></app-code-line>\n  <button (click)=\"onClick()\">Nyomj meg</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-trace',\n  templateUrl: './trace.component.html',\n  styleUrls: ['./trace.component.css']\n})\nexport class TraceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-code-side></app-code-side>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CodeModel} from '../models/code.model';\nimport {FileLocationModel} from '../models/fileLocation.model';\n\nconst CODE_BASE_URL = 'http://localhost:8080/api/coblist';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodeHttpService {\n\n  constructor(private http: HttpClient) { }\n\n  postCoobitFileLocation(fileLocation: FileLocationModel): Observable<CodeModel> {\n    return this.http.post<CodeModel>(CODE_BASE_URL, fileLocation);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {CodeLineModel} from '../models/codeLine.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LineService {\n  lineModel: CodeLineModel;\n\n  constructor() {\n    this.lineModel = {\n      lineNumber: 100,\n      code: '1234567890123456789012345678901234567890',\n      order: 100,\n      statement: 100,\n      lineBackgroundColor: 'undefined'\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}